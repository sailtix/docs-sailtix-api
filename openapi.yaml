basePath: /
definitions:
  AuthEmailLoginRequest:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  AuthLandingCheckEmailRequest:
    properties:
      email:
        maxLength: 100
        type: string
    required:
    - email
    type: object
  AuthLandingEmailVerificationRequest:
    properties:
      date_of_birth:
        type: string
      email:
        maxLength: 100
        type: string
      first_name:
        maxLength: 255
        type: string
      last_name:
        maxLength: 255
        type: string
      password:
        type: string
      phone_number:
        type: string
      verification_code:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    - verification_code
    type: object
  AuthLandingLoginEmailRequest:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  AuthLandingRegisterEmailRequest:
    properties:
      email:
        maxLength: 100
        type: string
      first_name:
        maxLength: 255
        type: string
      last_name:
        maxLength: 255
        type: string
    required:
    - email
    - first_name
    - last_name
    type: object
  AuthTokenResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
      access_token_expired_at:
        example: "2006-01-02T03:04:05+07:00"
        format: YYYY-MM-DDThh:mm:ssZ
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  CalendarFetchRequest:
    properties:
      arrival_dock_id:
        type: string
      departure_dock_id:
        type: string
      end_date:
        type: string
      is_active:
        type: boolean
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      start_date:
        type: string
      vessel_id:
        type: string
    type: object
  CalendarResponse:
    properties:
      route:
        allOf:
        - $ref: '#/definitions/RouteResponse'
        x-nullable: true
      seat_availabilities:
        items:
          $ref: '#/definitions/CalendarSeatAvailabilityResponse'
        type: array
        x-nullable: true
    type: object
  CalendarSeatAvailabilityResponse:
    properties:
      date:
        type: string
      seat_left:
        type: integer
    type: object
  CalendarUpdateAvailableSeatRequest:
    properties:
      date:
        type: string
      route_id:
        example: a8588717-b106-46aa-b9bb-56ab5ccf9f24
        type: string
      total_seats:
        minimum: 0
        type: integer
    required:
    - route_id
    type: object
  CompanyCreateRequest:
    properties:
      address:
        type: string
      branch_name:
        maxLength: 255
        type: string
      child_age_policy:
        type: string
      child_age_policy_description:
        type: string
      description:
        type: string
      infant_policy:
        type: string
      infant_policy_description:
        type: string
      legal_name:
        maxLength: 255
        type: string
      logo:
        type: string
      phone:
        type: string
      photo:
        type: string
      refund_policy:
        $ref: '#/definitions/CompanyRefundPolicyEnum'
      refund_policy_description:
        type: string
      reschedule_policy:
        $ref: '#/definitions/CompanyReschedulePolicyEnum'
      reschedule_policy_description:
        type: string
      slug:
        maxLength: 255
        type: string
      type:
        $ref: '#/definitions/CompanyTypeEnum'
    required:
    - address
    - branch_name
    - description
    - legal_name
    - logo
    - phone
    - photo
    - slug
    type: object
  CompanyFetchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - branch_name
              - legal_name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      type:
        allOf:
        - $ref: '#/definitions/CompanyTypeEnum'
        description: IsActive *bool                  `json:"is_active" extensions:"x-nullable"`
        x-nullable: true
    type: object
  CompanyLandingFetchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - branch_name
              - legal_name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  CompanyLandingOptionForRoutePricingSearchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - branch_name
              - legal_name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  CompanyOptionForUserFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - branch_name
              - legal_name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  CompanyOptionForVesselFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - branch_name
              - legal_name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  CompanyPublicPreviewResponse:
    properties:
      address:
        example: Address
        type: string
      branch_name:
        example: Ekajaya
        type: string
      description:
        example: Desc
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      legal_name:
        example: Ekajaya
        type: string
      logo:
        example: https://link.image.com or base64
        type: string
      phone:
        example: "+6285275758484"
        type: string
      photo:
        example: https://link.image.com or base64
        type: string
      slug:
        example: example-slug-123
        type: string
    type: object
  CompanyPublicResponse:
    properties:
      address:
        example: Address
        type: string
      branch_name:
        example: Ekajaya
        type: string
      child_age_policy:
        example: Policy
        type: string
      child_age_policy_description:
        example: Policy Description
        type: string
      description:
        example: Desc
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      infant_policy:
        example: Policy
        type: string
      infant_policy_description:
        example: Policy Description
        type: string
      legal_name:
        example: Ekajaya
        type: string
      logo:
        example: https://link.image.com or base64
        type: string
      phone:
        example: "+6285275758484"
        type: string
      photo:
        example: https://link.image.com or base64
        type: string
      refund_policy:
        $ref: '#/definitions/CompanyRefundPolicyEnum'
      refund_policy_description:
        example: Policy
        type: string
      reschedule_policy:
        $ref: '#/definitions/CompanyReschedulePolicyEnum'
      reschedule_policy_description:
        example: Policy
        type: string
      slug:
        example: example-slug-123
        type: string
      type:
        $ref: '#/definitions/CompanyTypeEnum'
    type: object
  CompanyRefundPolicyEnum:
    enum:
    - Flexible
    - Non-refundable
    type: string
  CompanyReschedulePolicyEnum:
    enum:
    - Flexible
    - Reschedule not allowed
    type: string
  CompanyResponse:
    properties:
      address:
        example: Address
        type: string
      branch_name:
        example: Ekajaya
        type: string
      child_age_policy:
        example: Policy
        type: string
      child_age_policy_description:
        example: Policy Description
        type: string
      created_at:
        type: string
      created_by:
        type: string
      created_by_user:
        allOf:
        - $ref: '#/definitions/UserPreviewResponse'
        x-nullable: true
      description:
        example: Desc
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      infant_policy:
        example: Policy
        type: string
      infant_policy_description:
        example: Policy Description
        type: string
      legal_name:
        example: Ekajaya
        type: string
      logo:
        example: https://link.image.com or base64
        type: string
      phone:
        example: "+6285275758484"
        type: string
      photo:
        example: https://link.image.com or base64
        type: string
      refund_policy:
        $ref: '#/definitions/CompanyRefundPolicyEnum'
      refund_policy_description:
        example: Policy
        type: string
      reschedule_policy:
        $ref: '#/definitions/CompanyReschedulePolicyEnum'
      reschedule_policy_description:
        example: Policy
        type: string
      slug:
        example: example-slug-123
        type: string
      type:
        $ref: '#/definitions/CompanyTypeEnum'
      updated_at:
        type: string
      updated_by:
        type: string
      updated_by_user:
        allOf:
        - $ref: '#/definitions/UserPreviewResponse'
        x-nullable: true
    type: object
  CompanyTypeEnum:
    enum:
    - INTERNAL
    - VENDOR
    type: string
  CompanyUpdateRequest:
    properties:
      address:
        type: string
      branch_name:
        maxLength: 255
        type: string
      child_age_policy:
        type: string
      child_age_policy_description:
        type: string
      description:
        type: string
      infant_policy:
        type: string
      infant_policy_description:
        type: string
      legal_name:
        maxLength: 255
        type: string
      logo:
        type: string
      phone:
        type: string
      photo:
        type: string
      refund_policy:
        $ref: '#/definitions/CompanyRefundPolicyEnum'
      refund_policy_description:
        type: string
      reschedule_policy:
        $ref: '#/definitions/CompanyReschedulePolicyEnum'
      reschedule_policy_description:
        type: string
      slug:
        maxLength: 255
        type: string
      type:
        $ref: '#/definitions/CompanyTypeEnum'
    required:
    - address
    - branch_name
    - description
    - legal_name
    - logo
    - phone
    - photo
    - slug
    type: object
  CurrencyEnum:
    enum:
    - IDR
    type: string
  CustomerFetchRequest:
    properties:
      customer_tier:
        allOf:
        - $ref: '#/definitions/CustomerTierNameEnum'
        x-nullable: true
      is_active:
        type: boolean
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - fullname
              - email
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  CustomerOptionForOrderFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - fullname
              - email
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  CustomerResponse:
    properties:
      customer_tier:
        allOf:
        - $ref: '#/definitions/CustomerTierResponse'
        x-nullable: true
      customer_tier_id:
        example: b50dd616-c1e3-4db0-afa0-142e0cd95d13
        type: string
      date_of_birth:
        example: "2020-01-01"
        type: string
      email:
        example: john.doe@gmail.com
        type: string
      first_name:
        example: John
        type: string
      id:
        example: bbb6c083-52d5-436f-811b-28d27b252fd5
        type: string
      is_active:
        type: boolean
      last_name:
        example: Doe
        type: string
      phone_number:
        example: "+628527575272"
        type: string
    type: object
  CustomerTierNameEnum:
    enum:
    - SILVER
    - GOLD
    - PLATINUM
    type: string
  CustomerTierResponse:
    properties:
      id:
        example: bbb6c083-52d5-436f-811b-28d27b252fd5
        type: string
      is_active:
        type: boolean
      name:
        $ref: '#/definitions/CustomerTierNameEnum'
    type: object
  CustomerUpdateRequest:
    properties:
      customer_tier:
        $ref: '#/definitions/CustomerTierNameEnum'
      is_active:
        type: boolean
    type: object
  DataResponse:
    additionalProperties: true
    type: object
  DockCreateRequest:
    properties:
      iana_timezone:
        $ref: '#/definitions/IANATimeZoneIdentifierEnum'
      is_active:
        type: boolean
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  DockFetchRequest:
    properties:
      is_active:
        type: boolean
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  DockLandingOptionForRoutePricingSearchRequest:
    properties:
      arrival_dock_id:
        type: string
      departure_dock_id:
        type: string
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  DockOptionForRouteFilterRequest:
    properties:
      arrival_dock_id:
        type: string
      departure_dock_id:
        type: string
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  DockOptionForRouteFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  DockOptionForRoutePricingFilterRequest:
    properties:
      arrival_dock_id:
        type: string
      departure_dock_id:
        type: string
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  DockPublicResponse:
    properties:
      created_at:
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      name:
        example: Pelabuhan A
        type: string
      updated_at:
        type: string
    type: object
  DockResponse:
    properties:
      created_at:
        type: string
      iana_timezone:
        $ref: '#/definitions/IANATimeZoneIdentifierEnum'
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      is_active:
        type: boolean
      name:
        example: Pelabuhan A
        type: string
      updated_at:
        type: string
    type: object
  DockUpdateRequest:
    properties:
      iana_timezone:
        $ref: '#/definitions/IANATimeZoneIdentifierEnum'
      is_active:
        type: boolean
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  GlobalSettingFetchRequest:
    properties:
      group:
        allOf:
        - $ref: '#/definitions/GlobalSettingGroupEnum'
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  GlobalSettingGroupEnum:
    enum:
    - AWS
    - ZEPTOMAIL
    - XENDIT
    type: string
  GlobalSettingKeyEnum:
    enum:
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_REGION
    - AWS_ENDPOINT
    - AWS_BUCKET_NAME
    - AWS_BUCKET_URL
    - ZEPTOMAIL_API_KEY
    - ZEPTOMAIL_SENDER_EMAIL
    - ZEPTOMAIL_SENDER_NAME
    - XENDIT_API_KEY
    - XENDIT_WEBHOOK_AUTH_HEADER
    - XENDIT_WEBHOOK_AUTH_TOKEN
    - XENDIT_VIRTUAL_ACCOUNT_EXPIRY
    - XENDIT_QR_CODE_EXPIRY
    type: string
  GlobalSettingResponse:
    properties:
      created_at:
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      key:
        $ref: '#/definitions/GlobalSettingKeyEnum'
      updated_at:
        type: string
      value:
        type: string
    type: object
  GlobalSettingUpdateRequest:
    properties:
      value:
        type: string
    required:
    - value
    type: object
  IANATimeZoneIdentifierEnum:
    enum:
    - Africa/Abidjan
    - Africa/Accra
    - Africa/Addis_Ababa
    - Africa/Algiers
    - Africa/Asmara
    - Africa/Asmera
    - Africa/Bamako
    - Africa/Bangui
    - Africa/Banjul
    - Africa/Blantyre
    - Africa/Brazzaville
    - Africa/Bujumbura
    - Africa/Cairo
    - Africa/Casablanca
    - Africa/Ceuta
    - Africa/Conakry
    - Africa/Dakar
    - Africa/Dar_es_Salaam
    - Africa/Djibouti
    - Africa/Douala
    - Africa/El_Aaiun
    - Africa/Freetown
    - Africa/Gaborone
    - Africa/Harare
    - Africa/Johannesburg
    - Africa/Juba
    - Africa/Kampala
    - Africa/Khartoum
    - Africa/Kigali
    - Africa/Kinshasa
    - Africa/Lagos
    - Africa/Libreville
    - Africa/Lome
    - Africa/Luanda
    - Africa/Lubumbashi
    - Africa/Lusaka
    - Africa/Malabo
    - Africa/Maputo
    - Africa/Maseru
    - Africa/Mbabane
    - Africa/Mogadishu
    - Africa/Monrovia
    - Africa/Nairobi
    - Africa/Ndjamena
    - Africa/Niamey
    - Africa/Nouakchott
    - Africa/Ouagadougou
    - Africa/Porto-Novo
    - Africa/Sao_Tome
    - Africa/Timbuktu
    - Africa/Tripoli
    - Africa/Tunis
    - Africa/Windhoek
    - America/Adak
    - America/Anchorage
    - America/Anguilla
    - America/Antigua
    - America/Araguaina
    - America/Argentina/Buenos_Aires
    - America/Argentina/Catamarca
    - America/Argentina/ComodRivadavia
    - America/Argentina/Cordoba
    - America/Argentina/Jujuy
    - America/Argentina/La_Rioja
    - America/Argentina/Mendoza
    - America/Argentina/Rio_Gallegos
    - America/Argentina/Salta
    - America/Argentina/San_Juan
    - America/Argentina/San_Luis
    - America/Argentina/Tucuman
    - America/Argentina/Ushuaia
    - America/Aruba
    - America/Asuncion
    - America/Atikokan
    - America/Atka
    - America/Bahia
    - America/Bahia_Banderas
    - America/Barbados
    - America/Belem
    - America/Belize
    - America/Blanc-Sablon
    - America/Boa_Vista
    - America/Bogota
    - America/Boise
    - America/Buenos_Aires
    - America/Cambridge_Bay
    - America/Campo_Grande
    - America/Cancun
    - America/Caracas
    - America/Catamarca
    - America/Cayenne
    - America/Cayman
    - America/Chicago
    - America/Chihuahua
    - America/Coral_Harbour
    - America/Cordoba
    - America/Costa_Rica
    - America/Creston
    - America/Cuiaba
    - America/Curacao
    - America/Danmarkshavn
    - America/Dawson
    - America/Dawson_Creek
    - America/Denver
    - America/Detroit
    - America/Dominica
    - America/Edmonton
    - America/Eirunepe
    - America/El_Salvador
    - America/Ensenada
    - America/Fort_Wayne
    - America/Fortaleza
    - America/Glace_Bay
    - America/Godthab
    - America/Goose_Bay
    - America/Grand_Turk
    - America/Grenada
    - America/Guadeloupe
    - America/Guatemala
    - America/Guayaquil
    - America/Guyana
    - America/Halifax
    - America/Havana
    - America/Hermosillo
    - America/Indiana/Indianapolis
    - America/Indiana/Knox
    - America/Indiana/Marengo
    - America/Indiana/Petersburg
    - America/Indiana/Tell_City
    - America/Indiana/Vevay
    - America/Indiana/Vincennes
    - America/Indiana/Winamac
    - America/Indianapolis
    - America/Inuvik
    - America/Iqaluit
    - America/Jamaica
    - America/Jujuy
    - America/Juneau
    - America/Kentucky/Louisville
    - America/Kentucky/Monticello
    - America/Knox_IN
    - America/Kralendijk
    - America/La_Paz
    - America/Lima
    - America/Los_Angeles
    - America/Louisville
    - America/Lower_Princes
    - America/Maceio
    - America/Managua
    - America/Manaus
    - America/Marigot
    - America/Martinique
    - America/Matamoros
    - America/Mazatlan
    - America/Mendoza
    - America/Menominee
    - America/Merida
    - America/Metlakatla
    - America/Mexico_City
    - America/Miquelon
    - America/Moncton
    - America/Monterrey
    - America/Montevideo
    - America/Montreal
    - America/Montserrat
    - America/Nassau
    - America/New_York
    - America/Nipigon
    - America/Nome
    - America/Noronha
    - America/North_Dakota/Beulah
    - America/North_Dakota/Center
    - America/North_Dakota/New_Salem
    - America/Ojinaga
    - America/Panama
    - America/Pangnirtung
    - America/Paramaribo
    - America/Phoenix
    - America/Port_of_Spain
    - America/Port-au-Prince
    - America/Porto_Acre
    - America/Porto_Velho
    - America/Puerto_Rico
    - America/Rainy_River
    - America/Rankin_Inlet
    - America/Recife
    - America/Regina
    - America/Resolute
    - America/Rio_Branco
    - America/Rosario
    - America/Santa_Isabel
    - America/Santarem
    - America/Santiago
    - America/Santo_Domingo
    - America/Sao_Paulo
    - America/Scoresbysund
    - America/Shiprock
    - America/Sitka
    - America/St_Barthelemy
    - America/St_Johns
    - America/St_Kitts
    - America/St_Lucia
    - America/St_Thomas
    - America/St_Vincent
    - America/Swift_Current
    - America/Tegucigalpa
    - America/Thule
    - America/Thunder_Bay
    - America/Tijuana
    - America/Toronto
    - America/Tortola
    - America/Vancouver
    - America/Virgin
    - America/Whitehorse
    - America/Winnipeg
    - America/Yakutat
    - America/Yellowknife
    - Antarctica/Casey
    - Antarctica/Davis
    - Antarctica/DumontDUrville
    - Antarctica/Macquarie
    - Antarctica/Mawson
    - Antarctica/McMurdo
    - Antarctica/Palmer
    - Antarctica/Rothera
    - Antarctica/South_Pole
    - Antarctica/Syowa
    - Antarctica/Troll
    - Antarctica/Vostok
    - Arctic/Longyearbyen
    - Asia/Aden
    - Asia/Almaty
    - Asia/Amman
    - Asia/Anadyr
    - Asia/Aqtau
    - Asia/Aqtobe
    - Asia/Ashgabat
    - Asia/Ashkhabad
    - Asia/Baghdad
    - Asia/Bahrain
    - Asia/Baku
    - Asia/Bangkok
    - Asia/Beirut
    - Asia/Bishkek
    - Asia/Brunei
    - Asia/Calcutta
    - Asia/Choibalsan
    - Asia/Chongqing
    - Asia/Chungking
    - Asia/Colombo
    - Asia/Dacca
    - Asia/Damascus
    - Asia/Dhaka
    - Asia/Dili
    - Asia/Dubai
    - Asia/Dushanbe
    - Asia/Gaza
    - Asia/Harbin
    - Asia/Hebron
    - Asia/Ho_Chi_Minh
    - Asia/Hong_Kong
    - Asia/Hovd
    - Asia/Irkutsk
    - Asia/Istanbul
    - Asia/Jakarta
    - Asia/Jayapura
    - Asia/Jerusalem
    - Asia/Kabul
    - Asia/Kamchatka
    - Asia/Karachi
    - Asia/Kashgar
    - Asia/Kathmandu
    - Asia/Katmandu
    - Asia/Khandyga
    - Asia/Kolkata
    - Asia/Krasnoyarsk
    - Asia/Kuala_Lumpur
    - Asia/Kuching
    - Asia/Kuwait
    - Asia/Macao
    - Asia/Macau
    - Asia/Magadan
    - Asia/Makassar
    - Asia/Manila
    - Asia/Muscat
    - Asia/Nicosia
    - Asia/Novokuznetsk
    - Asia/Novosibirsk
    - Asia/Omsk
    - Asia/Oral
    - Asia/Phnom_Penh
    - Asia/Pontianak
    - Asia/Pyongyang
    - Asia/Qatar
    - Asia/Qyzylorda
    - Asia/Rangoon
    - Asia/Riyadh
    - Asia/Saigon
    - Asia/Sakhalin
    - Asia/Samarkand
    - Asia/Seoul
    - Asia/Shanghai
    - Asia/Singapore
    - Asia/Taipei
    - Asia/Tashkent
    - Asia/Tbilisi
    - Asia/Tehran
    - Asia/Tel_Aviv
    - Asia/Thimbu
    - Asia/Thimphu
    - Asia/Tokyo
    - Asia/Ujung_Pandang
    - Asia/Ulaanbaatar
    - Asia/Ulan_Bator
    - Asia/Urumqi
    - Asia/Ust-Nera
    - Asia/Vientiane
    - Asia/Vladivostok
    - Asia/Yakutsk
    - Asia/Yekaterinburg
    - Asia/Yerevan
    - Atlantic/Azores
    - Atlantic/Bermuda
    - Atlantic/Canary
    - Atlantic/Cape_Verde
    - Atlantic/Faeroe
    - Atlantic/Faroe
    - Atlantic/Jan_Mayen
    - Atlantic/Madeira
    - Atlantic/Reykjavik
    - Atlantic/South_Georgia
    - Atlantic/St_Helena
    - Atlantic/Stanley
    - Australia/ACT
    - Australia/Adelaide
    - Australia/Brisbane
    - Australia/Broken_Hill
    - Australia/Canberra
    - Australia/Currie
    - Australia/Darwin
    - Australia/Eucla
    - Australia/Hobart
    - Australia/LHI
    - Australia/Lindeman
    - Australia/Lord_Howe
    - Australia/Melbourne
    - Australia/North
    - Australia/NSW
    - Australia/Perth
    - Australia/Queensland
    - Australia/South
    - Australia/Sydney
    - Australia/Tasmania
    - Australia/Victoria
    - Australia/West
    - Australia/Yancowinna
    - Brazil/Acre
    - Brazil/DeNoronha
    - Brazil/East
    - Brazil/West
    - Canada/Atlantic
    - Canada/Central
    - Canada/Eastern
    - Canada/Mountain
    - Canada/Newfoundland
    - Canada/Pacific
    - Canada/Saskatchewan
    - Canada/Yukon
    - Chile/Continental
    - Chile/EasterIsland
    - Cuba
    - Egypt
    - Eire
    - Etc/GMT
    - Etc/GMT+0
    - Etc/UCT
    - Etc/Universal
    - Etc/UTC
    - Etc/Zulu
    - Europe/Amsterdam
    - Europe/Andorra
    - Europe/Athens
    - Europe/Belfast
    - Europe/Belgrade
    - Europe/Berlin
    - Europe/Bratislava
    - Europe/Brussels
    - Europe/Bucharest
    - Europe/Budapest
    - Europe/Busingen
    - Europe/Chisinau
    - Europe/Copenhagen
    - Europe/Dublin
    - Europe/Gibraltar
    - Europe/Guernsey
    - Europe/Helsinki
    - Europe/Isle_of_Man
    - Europe/Istanbul
    - Europe/Jersey
    - Europe/Kaliningrad
    - Europe/Kiev
    - Europe/Lisbon
    - Europe/Ljubljana
    - Europe/London
    - Europe/Luxembourg
    - Europe/Madrid
    - Europe/Malta
    - Europe/Mariehamn
    - Europe/Minsk
    - Europe/Monaco
    - Europe/Moscow
    - Europe/Nicosia
    - Europe/Oslo
    - Europe/Paris
    - Europe/Podgorica
    - Europe/Prague
    - Europe/Riga
    - Europe/Rome
    - Europe/Samara
    - Europe/San_Marino
    - Europe/Sarajevo
    - Europe/Simferopol
    - Europe/Skopje
    - Europe/Sofia
    - Europe/Stockholm
    - Europe/Tallinn
    - Europe/Tirane
    - Europe/Tiraspol
    - Europe/Uzhgorod
    - Europe/Vaduz
    - Europe/Vatican
    - Europe/Vienna
    - Europe/Vilnius
    - Europe/Volgograd
    - Europe/Warsaw
    - Europe/Zagreb
    - Europe/Zaporozhye
    - Europe/Zurich
    - GB
    - GB-Eire
    - GMT
    - GMT+0
    - GMT0
    - GMT-0
    - Greenwich
    - Hongkong
    - Iceland
    - Indian/Antananarivo
    - Indian/Chagos
    - Indian/Christmas
    - Indian/Cocos
    - Indian/Comoro
    - Indian/Kerguelen
    - Indian/Mahe
    - Indian/Maldives
    - Indian/Mauritius
    - Indian/Mayotte
    - Indian/Reunion
    - Iran
    - Israel
    - Jamaica
    - Japan
    - Kwajalein
    - Libya
    - Mexico/BajaNorte
    - Mexico/BajaSur
    - Mexico/General
    - Navajo
    - NZ
    - NZ-CHAT
    - Pacific/Apia
    - Pacific/Auckland
    - Pacific/Chatham
    - Pacific/Chuuk
    - Pacific/Easter
    - Pacific/Efate
    - Pacific/Enderbury
    - Pacific/Fakaofo
    - Pacific/Fiji
    - Pacific/Funafuti
    - Pacific/Galapagos
    - Pacific/Gambier
    - Pacific/Guadalcanal
    - Pacific/Guam
    - Pacific/Honolulu
    - Pacific/Johnston
    - Pacific/Kiritimati
    - Pacific/Kosrae
    - Pacific/Kwajalein
    - Pacific/Majuro
    - Pacific/Marquesas
    - Pacific/Midway
    - Pacific/Nauru
    - Pacific/Niue
    - Pacific/Norfolk
    - Pacific/Noumea
    - Pacific/Pago_Pago
    - Pacific/Palau
    - Pacific/Pitcairn
    - Pacific/Pohnpei
    - Pacific/Ponape
    - Pacific/Port_Moresby
    - Pacific/Rarotonga
    - Pacific/Saipan
    - Pacific/Samoa
    - Pacific/Tahiti
    - Pacific/Tarawa
    - Pacific/Tongatapu
    - Pacific/Truk
    - Pacific/Wake
    - Pacific/Wallis
    - Pacific/Yap
    - Poland
    - Portugal
    - PRC
    - ROC
    - ROK
    - Singapore
    - Turkey
    - UCT
    - Universal
    - US/Alaska
    - US/Aleutian
    - US/Arizona
    - US/Central
    - US/Eastern
    - US/East-Indiana
    - US/Hawaii
    - US/Indiana-Starke
    - US/Michigan
    - US/Mountain
    - US/Pacific
    - US/Samoa
    - UTC
    - W-SU
    - Zulu
    type: string
  LandingRoutePricingResponse:
    properties:
      adult_fee:
        type: number
        x-nullable: true
      arrival_dock:
        allOf:
        - $ref: '#/definitions/DockPublicResponse'
        x-nullable: true
      arrival_time:
        allOf:
        - $ref: '#/definitions/data_type.HourTime'
        x-nullable: true
      child_fee:
        type: number
        x-nullable: true
      departure_dock:
        allOf:
        - $ref: '#/definitions/DockPublicResponse'
        x-nullable: true
      departure_time:
        allOf:
        - $ref: '#/definitions/data_type.HourTime'
        x-nullable: true
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      infant_fee:
        type: number
        x-nullable: true
      route_id:
        example: 8b7e25b2-ed29-4ca1-a3fe-d4f4d1230d24
        type: string
      seat_left:
        type: integer
        x-nullable: true
      travel_date:
        type: string
      vessel:
        allOf:
        - $ref: '#/definitions/VesselPublicResponse'
        x-nullable: true
    type: object
  OrderCreateRequest:
    properties:
      customer_id:
        example: 0880396f-758a-45e2-a3bf-4c6a19913132
        type: string
      guest_email:
        maxLength: 255
        type: string
      guest_name:
        example: John Doe
        maxLength: 255
        type: string
      guest_phone:
        type: string
      vessel_bookings:
        items:
          $ref: '#/definitions/OrderCreateRequestVesselBooking'
        minItems: 1
        type: array
    type: object
  OrderCreateRequestVesselBooking:
    properties:
      depart_route_id:
        example: dcf9a815-21b5-4a97-b953-7e34dfccf5b4
        type: string
      depart_travel_date:
        type: string
      passengers:
        items:
          $ref: '#/definitions/OrderCreateRequestVesselBookingPassenger'
        minItems: 1
        type: array
      return_route_id:
        example: a92f3235-7470-4ceb-8b61-ba32db060c9c
        type: string
      return_travel_date:
        example: 41762dda-b61e-474b-bb0e-25902538af21
        type: string
    required:
    - depart_route_id
    type: object
  OrderCreateRequestVesselBookingPassenger:
    properties:
      name:
        maxLength: 255
        type: string
      type:
        $ref: '#/definitions/VesselBookingPassengerTypeEnum'
    required:
    - name
    type: object
  OrderDownloadEticketRequest:
    type: object
  OrderDownloadInvoiceRequest:
    type: object
  OrderFetchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  OrderGetRequest:
    type: object
  OrderIssuedByEnum:
    enum:
    - WEB_SAILTIX
    - ADMIN
    type: string
  OrderItemItemTypeEnum:
    enum:
    - VESSEL_BOOKING
    type: string
  OrderItemResponse:
    properties:
      created_at:
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      item_id:
        example: 361af688-80ea-4f14-81da-d7cefad6ae52
        type: string
      item_type:
        $ref: '#/definitions/OrderItemItemTypeEnum'
      order_id:
        example: cd739b22-75b1-455b-a5de-ce4b1efc20d0
        type: string
      price:
        example: 100000
        type: number
      updated_at:
        type: string
      vessel_booking:
        allOf:
        - $ref: '#/definitions/VesselBookingResponse'
        x-nullable: true
    type: object
  OrderLandingCreateRequest:
    properties:
      guest_email:
        maxLength: 255
        type: string
      guest_name:
        example: John Doe
        maxLength: 255
        type: string
      guest_phone:
        type: string
      payment_method_channel:
        $ref: '#/definitions/PaymentMethodChannelEnum'
      payment_method_id:
        type: string
        x-nullable: true
      vessel_bookings:
        items:
          $ref: '#/definitions/OrderLandingCreateRequestVesselBooking'
        minItems: 1
        type: array
    type: object
  OrderLandingCreateRequestVesselBooking:
    properties:
      depart_route_id:
        example: dcf9a815-21b5-4a97-b953-7e34dfccf5b4
        type: string
      depart_travel_date:
        type: string
      passengers:
        items:
          $ref: '#/definitions/OrderLandingCreateRequestVesselBookingPassenger'
        minItems: 1
        type: array
      return_route_id:
        example: a92f3235-7470-4ceb-8b61-ba32db060c9c
        type: string
      return_travel_date:
        example: 41762dda-b61e-474b-bb0e-25902538af21
        type: string
    required:
    - depart_route_id
    type: object
  OrderLandingCreateRequestVesselBookingPassenger:
    properties:
      name:
        maxLength: 255
        type: string
      type:
        $ref: '#/definitions/VesselBookingPassengerTypeEnum'
    required:
    - name
    type: object
  OrderLandingDownloadEticketByIdRequest:
    type: object
  OrderLandingDownloadEticketByInvoiceNumberRequest:
    type: object
  OrderLandingFetchRequest:
    properties:
      issued_by:
        allOf:
        - $ref: '#/definitions/OrderIssuedByEnum'
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      status:
        allOf:
        - $ref: '#/definitions/OrderStatusEnum'
        x-nullable: true
    type: object
  OrderLandingGetByInvoiceNumberRequest:
    type: object
  OrderLandingGetRequest:
    type: object
  OrderResponse:
    properties:
      created_at:
        type: string
      customer:
        allOf:
        - $ref: '#/definitions/CustomerResponse'
        x-nullable: true
      customer_id:
        example: 7fc5d047-582b-45e3-a294-0c8eeff0c47e
        type: string
        x-nullable: true
      guest_email:
        example: john.doe@gmail.com
        type: string
        x-nullable: true
      guest_name:
        example: John Doe
        type: string
        x-nullable: true
      guest_phone:
        example: "+6285275756464"
        type: string
        x-nullable: true
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      issued_by:
        $ref: '#/definitions/OrderIssuedByEnum'
      order_items:
        items:
          $ref: '#/definitions/OrderItemResponse'
        type: array
        x-nullable: true
      status:
        $ref: '#/definitions/OrderStatusEnum'
      total_price:
        example: 100000
        type: number
      updated_at:
        type: string
      xendit_payment:
        allOf:
        - $ref: '#/definitions/XenditPaymentResponse'
        x-nullable: true
    type: object
  OrderStatusEnum:
    enum:
    - PENDING
    - AWAITING_PAYMENT
    - PAID
    - CANCELLED
    - FAILED
    - REFUNDED
    - RESCHEDULED
    type: string
  PaginationResponse:
    properties:
      limit:
        example: 10
        type: integer
      nodes: {}
      page:
        example: 1
        type: integer
      total:
        example: 24
        type: integer
    type: object
  PaymentLandingCreateOrderPaymentRequest:
    properties:
      order_id:
        type: string
      payment_method_channel:
        $ref: '#/definitions/PaymentMethodChannelEnum'
      payment_method_id:
        type: string
        x-nullable: true
    required:
    - order_id
    type: object
  PaymentMethodChannelEnum:
    enum:
    - BCA
    - MANDIRI
    - BRI
    - BNI
    - CIMB
    - QR_CODE
    - CARD
    - SHOPEEPAY
    - OVO
    - DANA
    - LINKAJA
    - JENIUSPAY
    type: string
  PaymentMethodEnum:
    enum:
    - VIRTUAL_ACCOUNT
    - EWALLET
    - QR_CODE
    - CARD
    type: string
  PaymentStatusEnum:
    enum:
    - PENDING
    - REQUIRES_ACTION
    - CANCELED
    - SUCCEEDED
    - FAILED
    - VOIDED
    - UNKNOWN
    - AWAITING_CAPTURE
    - EXPIRED
    - UNKNOWN_ENUM_VALUE
    type: string
  PermissionEnum:
    enum:
    - CALENDAR_FETCH
    - CALENDAR_UPDATE_AVAILABLE_SEAT
    - COMPANY_CREATE
    - COMPANY_FETCH
    - COMPANY_GET
    - COMPANY_UPDATE
    - COMPANY_DELETE
    - COMPANY_OPTION_FOR_VESSEL_FORM
    - COMPANY_OPTION_FOR_USER_FORM
    - CUSTOMER_TIER_OPTION_FOR_CUSTOMER_FORM
    - CUSTOMER_TIER_OPTION_FOR_ROUTE_PRICING_FILTER
    - CUSTOMER_FETCH
    - CUSTOMER_GET
    - CUSTOMER_UPDATE
    - CUSTOMER_OPTION_FOR_ORDER_FORM
    - DOCK_CREATE
    - DOCK_FETCH
    - DOCK_GET
    - DOCK_UPDATE
    - DOCK_DELETE
    - DOCK_OPTION_FOR_ROUTE_FORM
    - DOCK_OPTION_FOR_ROUTE_FILTER
    - DOCK_OPTION_FOR_ROUTE_PRICING_FILTER
    - GLOBAL_SETTING_CREATE
    - GLOBAL_SETTING_FETCH
    - GLOBAL_SETTING_GET
    - GLOBAL_SETTING_UPDATE
    - GLOBAL_SETTING_UPDATE_BATCH
    - GLOBAL_SETTING_DELETE
    - ORDER_CREATE
    - ORDER_FETCH
    - ORDER_GET
    - PLACE_CREATE
    - PLACE_FETCH
    - PLACE_GET
    - PLACE_UPDATE
    - PLACE_UPDATE_MOVE
    - PLACE_DELETE
    - ROLE_FETCH
    - ROLE_OPTION_FOR_USER_FORM
    - ROUTE_CREATE
    - ROUTE_CREATE_BATCH
    - ROUTE_FETCH
    - ROUTE_GET
    - ROUTE_UPDATE
    - ROUTE_DELETE
    - ROUTE_OPTION_FOR_ROUTE_PRICING_FORM
    - ROUTE_OPTION_FOR_ORDER_FORM
    - ROUTE_PRICING_CREATE
    - ROUTE_PRICING_FETCH
    - ROUTE_PRICING_GET
    - ROUTE_PRICING_UPDATE
    - ROUTE_PRICING_DELETE
    - USER_CREATE
    - USER_FETCH
    - USER_GET
    - USER_UPDATE
    - USER_UPDATE_PASSWORD
    - VESSEL_CREATE
    - VESSEL_FETCH
    - VESSEL_GET
    - VESSEL_UPDATE
    - VESSEL_DELETE
    - VESSEL_OPTION_FOR_ROUTE_FORM
    - VESSEL_OPTION_FOR_ROUTE_FILTER
    - VESSEL_OPTION_FOR_ROUTE_PRICING_FILTER
    type: string
  PlaceCreateRequest:
    properties:
      image_link:
        type: string
      name:
        maxLength: 255
        type: string
      subtitle:
        maxLength: 255
        type: string
    required:
    - image_link
    - name
    - subtitle
    type: object
  PlaceLandingFetchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
    type: object
  PlaceResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      image_link:
        type: string
      name:
        example: Nusa Perida
        type: string
      subtitle:
        example: Bali, Indonesia
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  PlaceUpdateRequest:
    properties:
      position:
        minimum: 1
        type: integer
    type: object
  Response:
    properties:
      data: {}
    type: object
  RoleEnum:
    enum:
    - SUPER_ADMIN
    - ACCOUNTING
    - FULL_ACCESS
    - CONTENT_MANAGEMENT
    - READ_ONLY
    type: string
  RoleFetchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  RoleOptionForUserFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  RoleResponse:
    properties:
      description:
        type: string
        x-nullable: true
      id:
        type: string
      name:
        $ref: '#/definitions/RoleEnum'
    type: object
  RouteCreateBatchRequest:
    properties:
      routes:
        items:
          $ref: '#/definitions/RouteCreateBatchRequestRoute'
        type: array
      vessel_id:
        type: string
    required:
    - vessel_id
    type: object
  RouteCreateBatchRequestRoute:
    properties:
      arrival_dock_id:
        type: string
      arrival_time:
        $ref: '#/definitions/data_type.HourTime'
      departure_dock_id:
        type: string
      departure_time:
        $ref: '#/definitions/data_type.HourTime'
      is_active:
        type: boolean
    required:
    - arrival_dock_id
    - departure_dock_id
    type: object
  RouteCreateRequest:
    properties:
      arrival_dock_id:
        type: string
      arrival_time:
        $ref: '#/definitions/data_type.HourTime'
      departure_dock_id:
        type: string
      departure_time:
        $ref: '#/definitions/data_type.HourTime'
      is_active:
        type: boolean
      vessel_id:
        type: string
    required:
    - arrival_dock_id
    - departure_dock_id
    - vessel_id
    type: object
  RouteFetchRequest:
    properties:
      arrival_dock_id:
        type: string
        x-nullable: true
      departure_dock_id:
        type: string
        x-nullable: true
      is_active:
        type: boolean
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      vessel_id:
        type: string
        x-nullable: true
    type: object
  RouteOptionForOrderFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  RouteOptionForRoutePricingFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  RoutePricingCreateRequest:
    properties:
      adult_fee:
        type: number
      child_fee:
        type: number
      infant_fee:
        minimum: 0
        type: number
      route_id:
        type: string
    required:
    - route_id
    type: object
  RoutePricingFetchRequest:
    properties:
      arrival_dock_id:
        type: string
        x-nullable: true
      customer_tier:
        allOf:
        - $ref: '#/definitions/CustomerTierNameEnum'
        x-nullable: true
      departure_dock_id:
        type: string
        x-nullable: true
      is_active:
        type: boolean
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: desc
              type: string
            field:
              enum:
              - created_at
              - updated_at
              example: updated_at
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      vessel_id:
        type: string
        x-nullable: true
    type: object
  RoutePricingLandingSearchRequest:
    properties:
      adult:
        type: integer
      arrival_dock_id:
        type: string
        x-nullable: true
      child:
        type: integer
      company_ids:
        items:
          type: string
        type: array
        x-nullable: true
      departure_date:
        type: string
      departure_dock_id:
        type: string
        x-nullable: true
      infant:
        type: integer
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      vessel_types:
        items:
          $ref: '#/definitions/VesselTypeEnum'
        type: array
        x-nullable: true
    required:
    - arrival_dock_id
    - departure_dock_id
    type: object
  RoutePricingResponse:
    properties:
      adult_fee:
        example: 100000
        type: number
      child_fee:
        example: 100000
        type: number
      customer_tier:
        allOf:
        - $ref: '#/definitions/CustomerTierResponse'
        x-nullable: true
      customer_tier_id:
        example: 98c13377-e93f-4f29-b101-a0c79e02b2d8
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      infant_fee:
        example: 100000
        type: number
      is_active:
        type: boolean
      route:
        allOf:
        - $ref: '#/definitions/RouteResponse'
        x-nullable: true
      route_id:
        example: 12de2751-f2bf-4db8-8177-64a96340331e
        type: string
    type: object
  RoutePricingUpdateRequest:
    properties:
      adult_fee:
        type: number
      child_fee:
        type: number
      infant_fee:
        minimum: 0
        type: number
    type: object
  RoutePublicResponse:
    properties:
      arrival_dock:
        allOf:
        - $ref: '#/definitions/DockResponse'
        x-nullable: true
      arrival_dock_id:
        example: 47199607-eb7c-47fe-b2a9-748ab71a3038
        type: string
      arrival_time:
        $ref: '#/definitions/data_type.HourTime'
      departure_dock:
        allOf:
        - $ref: '#/definitions/DockResponse'
        x-nullable: true
      departure_dock_id:
        example: 899bdba5-678e-4dc0-8059-dab796611361
        type: string
      departure_time:
        $ref: '#/definitions/data_type.HourTime'
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      sailing_time:
        type: string
        x-nullable: true
      vessel:
        allOf:
        - $ref: '#/definitions/VesselPublicResponse'
        x-nullable: true
      vessel_id:
        example: d0c3f551-ce1b-45b7-aa16-73f9e4506dd8
        type: string
    type: object
  RouteResponse:
    properties:
      arrival_dock:
        allOf:
        - $ref: '#/definitions/DockResponse'
        x-nullable: true
      arrival_dock_id:
        example: 47199607-eb7c-47fe-b2a9-748ab71a3038
        type: string
      arrival_time:
        $ref: '#/definitions/data_type.HourTime'
      departure_dock:
        allOf:
        - $ref: '#/definitions/DockResponse'
        x-nullable: true
      departure_dock_id:
        example: 899bdba5-678e-4dc0-8059-dab796611361
        type: string
      departure_time:
        $ref: '#/definitions/data_type.HourTime'
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      is_active:
        type: boolean
      sailing_time:
        type: string
        x-nullable: true
      vessel:
        allOf:
        - $ref: '#/definitions/VesselPublicResponse'
        x-nullable: true
      vessel_id:
        example: d0c3f551-ce1b-45b7-aa16-73f9e4506dd8
        type: string
    type: object
  RouteUpdateRequest:
    properties:
      arrival_time:
        $ref: '#/definitions/data_type.HourTime'
      departure_time:
        $ref: '#/definitions/data_type.HourTime'
      is_active:
        type: boolean
    type: object
  SuccessResponse:
    properties:
      message:
        example: OK
        type: string
    type: object
  UserCreateRequest:
    properties:
      avatar:
        type: string
      company_id:
        type: string
      email:
        maxLength: 100
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 255
        type: string
      password:
        type: string
      person_in_charge:
        maxLength: 100
        type: string
      role_id:
        type: string
    required:
    - company_id
    - email
    - name
    - password
    - person_in_charge
    - role_id
    type: object
  UserFetchRequest:
    properties:
      is_active:
        type: boolean
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      role_ids:
        items:
          type: string
        type: array
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: asc
              type: string
            field:
              enum:
              - name
              - email
              - is_active
              - created_at
              - updated_at
              example: name
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
    type: object
  UserMeResponse:
    properties:
      avatar:
        type: string
        x-nullable: true
      email:
        example: john.doe@gmail.com
        type: string
      id:
        example: 5f3e8885-a233-4a94-b657-432c369ae0fc
        type: string
      is_active:
        type: boolean
      name:
        example: John Doe
        type: string
      permissions:
        items:
          $ref: '#/definitions/PermissionEnum'
        type: array
      person_in_charge:
        example: Jane Doe
        type: string
      role:
        allOf:
        - $ref: '#/definitions/RoleResponse'
        x-nullable: true
      role_id:
        example: fce116d4-7ba9-4f29-9aa4-ec97e7a6f26c
        type: string
      verified_at:
        example: "2020-01-01T01:02:03Z"
        type: string
    type: object
  UserPreviewResponse:
    properties:
      avatar:
        type: string
        x-nullable: true
      email:
        example: john.doe@gmail.com
        type: string
      id:
        example: 5f3e8885-a233-4a94-b657-432c369ae0fc
        type: string
      name:
        example: John Doe
        type: string
    type: object
  UserResponse:
    properties:
      avatar:
        type: string
        x-nullable: true
      company:
        allOf:
        - $ref: '#/definitions/CompanyPublicResponse'
        x-nullable: true
      email:
        example: john.doe@gmail.com
        type: string
      id:
        example: 5f3e8885-a233-4a94-b657-432c369ae0fc
        type: string
      is_active:
        type: boolean
      name:
        example: John Doe
        type: string
      person_in_charge:
        example: Jane Doe
        type: string
      role:
        allOf:
        - $ref: '#/definitions/RoleResponse'
        x-nullable: true
      role_id:
        example: fce116d4-7ba9-4f29-9aa4-ec97e7a6f26c
        type: string
      verified_at:
        example: "2020-01-01T01:02:03Z"
        type: string
    type: object
  UserUpdatePasswordRequest:
    properties:
      password:
        maxLength: 255
        type: string
    required:
    - password
    type: object
  UserUpdateRequest:
    properties:
      avatar:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 255
        type: string
      person_in_charge:
        maxLength: 100
        type: string
      role_id:
        type: string
    required:
    - name
    - person_in_charge
    - role_id
    type: object
  VesselBookingPassengerResponse:
    properties:
      created_at:
        type: string
      depart_price:
        example: 100000
        type: number
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      name:
        example: John Doe
        type: string
      return_price:
        example: 100000
        type: number
      type:
        $ref: '#/definitions/VesselBookingPassengerTypeEnum'
      updated_at:
        type: string
      vessel_booking_id:
        example: 18fe6b3f-eb3f-42f2-a33e-eb83485147b4
        type: string
    type: object
  VesselBookingPassengerTypeEnum:
    enum:
    - ADULT
    - CHILD
    - INFANT
    type: string
  VesselBookingResponse:
    properties:
      created_at:
        type: string
      depart_adult_fee:
        example: 100000
        type: number
      depart_child_fee:
        example: 100000
        type: number
      depart_infant_fee:
        example: 100000
        type: number
      depart_route:
        allOf:
        - $ref: '#/definitions/RoutePublicResponse'
        x-nullable: true
      depart_route_pricing_id:
        example: 3c42a939-931d-46bb-ad50-9d297dcdc5f7
        type: string
      depart_travel_date:
        type: string
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      return_adult_fee:
        example: 100000
        type: number
        x-nullable: true
      return_child_fee:
        example: 100000
        type: number
        x-nullable: true
      return_infant_fee:
        example: 100000
        type: number
        x-nullable: true
      return_route:
        allOf:
        - $ref: '#/definitions/RoutePublicResponse'
        x-nullable: true
      return_route_pricing_id:
        example: 6675c33b-f92d-4892-b0db-9b6e5b88b2a7
        type: string
        x-nullable: true
      return_travel_date:
        type: string
      updated_at:
        type: string
      vessel_booking_passengers:
        items:
          $ref: '#/definitions/VesselBookingPassengerResponse'
        type: array
        x-nullable: true
    type: object
  VesselCreateRequest:
    properties:
      active_since:
        type: string
      company_id:
        type: string
      facility:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 255
        type: string
      seat:
        type: integer
      type:
        $ref: '#/definitions/VesselTypeEnum'
    required:
    - company_id
    - facility
    - name
    type: object
  VesselFetchRequest:
    properties:
      is_active:
        type: boolean
        x-nullable: true
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: asc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: username
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      type:
        allOf:
        - $ref: '#/definitions/VesselTypeEnum'
        x-nullable: true
    type: object
  VesselLandingFetchRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: asc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: username
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      type:
        allOf:
        - $ref: '#/definitions/VesselTypeEnum'
        x-nullable: true
    type: object
  VesselOptionForRouteFilterRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: asc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: username
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      type:
        allOf:
        - $ref: '#/definitions/VesselTypeEnum'
        x-nullable: true
    type: object
  VesselOptionForRouteFormRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: asc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: username
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      type:
        allOf:
        - $ref: '#/definitions/VesselTypeEnum'
        x-nullable: true
    type: object
  VesselOptionForRoutePricingFilterRequest:
    properties:
      limit:
        example: 100
        maximum: 100
        minimum: 1
        type: integer
      page:
        example: 1
        minimum: 1
        type: integer
      phrase:
        type: string
        x-nullable: true
      sorts:
        items:
          properties:
            direction:
              enum:
              - asc
              - desc
              example: asc
              type: string
            field:
              enum:
              - name
              - created_at
              - updated_at
              example: username
              type: string
          required:
          - direction
          - field
          type: object
        type: array
        uniqueItems: true
      type:
        allOf:
        - $ref: '#/definitions/VesselTypeEnum'
        x-nullable: true
    type: object
  VesselPublicResponse:
    properties:
      active_since:
        example: "2020-01-01"
        type: string
      company:
        allOf:
        - $ref: '#/definitions/CompanyPublicResponse'
        x-nullable: true
      company_id:
        example: e38da19b-36c6-4732-8677-3780e4562e43
        type: string
      facility:
        example: Facility List
        type: string
      id:
        example: d263d9cb-7465-4455-a5de-cda4862dcd81
        type: string
      name:
        example: Vessel A
        type: string
      seat:
        example: 200
        type: integer
      type:
        $ref: '#/definitions/VesselTypeEnum'
    type: object
  VesselResponse:
    properties:
      active_since:
        example: "2020-01-01"
        type: string
      company:
        allOf:
        - $ref: '#/definitions/CompanyPublicResponse'
        x-nullable: true
      company_id:
        example: e38da19b-36c6-4732-8677-3780e4562e43
        type: string
      facility:
        example: Facility List
        type: string
      id:
        example: d263d9cb-7465-4455-a5de-cda4862dcd81
        type: string
      is_active:
        type: boolean
      name:
        example: Vessel A
        type: string
      seat:
        example: 200
        type: integer
      type:
        $ref: '#/definitions/VesselTypeEnum'
    type: object
  VesselTypeEnum:
    enum:
    - FERRY
    - FASTBOAT
    type: string
  VesselUpdateRequest:
    properties:
      active_since:
        type: string
      facility:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 255
        type: string
      seat:
        type: integer
      type:
        $ref: '#/definitions/VesselTypeEnum'
    required:
    - facility
    - name
    type: object
  XenditPaymentResponse:
    properties:
      amount:
        type: number
      card:
        allOf:
        - $ref: '#/definitions/dto_response.XenditPaymentResponseCard'
        x-nullable: true
      created_at:
        type: string
      currency_code:
        $ref: '#/definitions/CurrencyEnum'
      id:
        example: 9ae3c71a-1007-433d-ae8b-3b45d06b5e5b
        type: string
      order_id:
        example: fab6cc39-6903-4bd6-84fc-c7c7fdaca98e
        type: string
      payment_method:
        $ref: '#/definitions/PaymentMethodEnum'
      payment_method_channel:
        $ref: '#/definitions/PaymentMethodChannelEnum'
      qr_code:
        allOf:
        - $ref: '#/definitions/dto_response.XenditPaymentResponseQrCode'
        x-nullable: true
      status:
        $ref: '#/definitions/PaymentStatusEnum'
      status_description:
        type: string
      updated_at:
        type: string
      virtual_account:
        allOf:
        - $ref: '#/definitions/dto_response.XenditPaymentResponseVirtualAccount'
        x-nullable: true
    type: object
  data_type.HourTime:
    type: object
  dto_response.XenditPaymentResponseCard:
    properties:
      payment_url:
        type: string
    type: object
  dto_response.XenditPaymentResponseQrCode:
    properties:
      expires_at:
        type: string
      qr_string:
        type: string
    type: object
  dto_response.XenditPaymentResponseVirtualAccount:
    properties:
      customer_name:
        type: string
      expires_at:
        type: string
      virtual_account_number:
        type: string
    type: object
host: api.sailtix.com
info:
  contact: {}
  title: Sailtix
  version: 1.0.0
paths:
  /dash/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.AuthEmailLoginRequest
        required: true
        schema:
          $ref: '#/definitions/AuthEmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/AuthTokenResponse'
              type: object
      summary: Email Login (Dashboard)
      tags:
      - Auth
  /dash/auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SuccessResponse'
      summary: Logout (Dashboard)
      tags:
      - Auth
  /dash/calendars/available-seat:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CalendarUpdateAvailableSeatRequest
        required: true
        schema:
          $ref: '#/definitions/CalendarUpdateAvailableSeatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      calendar_seat_available:
                        $ref: '#/definitions/CalendarSeatAvailabilityResponse'
                    type: object
              type: object
      summary: Update calendar available seat (Dashboard)
      tags:
      - Calendars
  /dash/calendars/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CalendarFetchRequest
        required: true
        schema:
          $ref: '#/definitions/CalendarFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CalendarResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch route pricing seat availabilities for selected date range (Dashboard)
      tags:
      - Calendars
  /dash/companies:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CompanyCreateRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      company:
                        $ref: '#/definitions/CompanyResponse'
                    type: object
              type: object
      summary: Create Company (Dashboard)
      tags:
      - Companies
  /dash/companies/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Soft Delete company by Id (dashboard)
      tags:
      - Companies
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      company:
                        $ref: '#/definitions/CompanyResponse'
                    type: object
              type: object
      summary: Get company by Id (dashboard)
      tags:
      - Companies
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.CompanyUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      company:
                        $ref: '#/definitions/CompanyResponse'
                    type: object
              type: object
      summary: Update company by Id (dashboard)
      tags:
      - Companies
  /dash/companies/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CompanyFetchRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CompanyResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Companies (Dashboard)
      tags:
      - Companies
  /dash/companies/options/user-form:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CompanyOptionForUserFormRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyOptionForUserFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CompanyResponse'
                        type: array
                    type: object
              type: object
      summary: Option for User Form (Dashboard)
      tags:
      - Companies
  /dash/companies/options/vessel-form:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CompanyOptionForVesselFormRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyOptionForVesselFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CompanyResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Vessel Form (Dashboard)
      tags:
      - Companies
  /dash/customers/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      customer:
                        $ref: '#/definitions/CustomerResponse'
                    type: object
              type: object
      summary: Get Customer (Dashboard)
      tags:
      - Customers
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.CustomerUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/CustomerUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      customer:
                        $ref: '#/definitions/CustomerResponse'
                    type: object
              type: object
      summary: Update Customer (Dashboard)
      tags:
      - Customers
  /dash/customers/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CustomerFetchRequest
        required: true
        schema:
          $ref: '#/definitions/CustomerFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CustomerResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch Customers (Dashboard)
      tags:
      - Customers
  /dash/customers/options/order-form:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CustomerOptionForOrderFormRequest
        required: true
        schema:
          $ref: '#/definitions/CustomerOptionForOrderFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CustomerResponse'
                        type: array
                    type: object
              type: object
      summary: Option For Order Form (Dashboard)
      tags:
      - Customers
  /dash/docks:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.DockCreateRequest
        required: true
        schema:
          $ref: '#/definitions/DockCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      dock:
                        $ref: '#/definitions/DockResponse'
                    type: object
              type: object
      summary: Create Dock (Dashboard)
      tags:
      - Docks
  /dash/docks/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Soft Delete dock by Id (dashboard)
      tags:
      - Docks
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      dock:
                        $ref: '#/definitions/DockResponse'
                    type: object
              type: object
      summary: Get dock by Id (dashboard)
      tags:
      - Docks
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.DockUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/DockUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      dock:
                        $ref: '#/definitions/DockResponse'
                    type: object
              type: object
      summary: Update dock by Id (dashboard)
      tags:
      - Docks
  /dash/docks/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.DockFetchRequest
        required: true
        schema:
          $ref: '#/definitions/DockFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/DockResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Dock (Dashboard)
      tags:
      - Docks
  /dash/docks/options/route-filter:
    post:
      consumes:
      - application/json
      description: Return list of docks for route dropdown filter, this return all
        active or inactive route, only arrival_dock_id or departure_dock_id can be
        inserted in the filter
      parameters:
      - description: Body Request
        in: body
        name: dto_request.DockOptionForRouteFilterRequest
        required: true
        schema:
          $ref: '#/definitions/DockOptionForRouteFilterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/DockResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Route Filter (Dashboard)
      tags:
      - Docks
  /dash/docks/options/route-form:
    post:
      consumes:
      - application/json
      description: Return list of docks for route form, this return only active route
      parameters:
      - description: Body Request
        in: body
        name: dto_request.DockOptionForRouteFormRequest
        required: true
        schema:
          $ref: '#/definitions/DockOptionForRouteFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/DockResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Route Form (Dashboard)
      tags:
      - Docks
  /dash/docks/options/route-pricing-filter:
    post:
      consumes:
      - application/json
      description: Return list of docks for route pricing dropdown filter, this return
        all active or inactive route, only arrival_dock_id or departure_dock_id can
        be inserted in the filter
      parameters:
      - description: Body Request
        in: body
        name: dto_request.DockOptionForRoutePricingFilterRequest
        required: true
        schema:
          $ref: '#/definitions/DockOptionForRoutePricingFilterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/DockResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Route Pricing Filter (Dashboard)
      tags:
      - Docks
  /dash/global-settings/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      global_setting:
                        $ref: '#/definitions/GlobalSettingResponse'
                    type: object
              type: object
      summary: Get globalSetting by Id (dashboard)
      tags:
      - GlobalSettings
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.GlobalSettingUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/GlobalSettingUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      global_setting:
                        $ref: '#/definitions/GlobalSettingResponse'
                    type: object
              type: object
      summary: Update globalSetting by Id (dashboard)
      tags:
      - GlobalSettings
  /dash/global-settings/batch:
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.GlobalSettingUpdateBatchRequest
        required: true
        schema:
          items:
            properties:
              id:
                type: string
              value:
                type: string
            required:
            - id
            - value
            type: object
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Update globalSetting batch (dashboard)
      tags:
      - GlobalSettings
  /dash/global-settings/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.GlobalSettingFetchRequest
        required: true
        schema:
          $ref: '#/definitions/GlobalSettingFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/GlobalSettingResponse'
                        type: array
                    type: object
              type: object
      summary: Filter GlobalSetting (Dashboard)
      tags:
      - GlobalSettings
  /dash/orders:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.OrderCreateRequest
        required: true
        schema:
          $ref: '#/definitions/OrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      order:
                        $ref: '#/definitions/OrderResponse'
                    type: object
              type: object
      summary: Create Orders (Dashboard)
      tags:
      - Orders
  /dash/orders/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderGetRequest
        required: true
        schema:
          $ref: '#/definitions/OrderGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      order:
                        $ref: '#/definitions/OrderResponse'
                    type: object
              type: object
      summary: Get Order (Dashboard)
      tags:
      - Orders
  /dash/orders/{id}/eticket/download:
    get:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderDownloadEticketRequest
        required: true
        schema:
          $ref: '#/definitions/OrderDownloadEticketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'content-type: application/pdf'
      summary: Download Order Eticket (Dashboard)
      tags:
      - Orders
  /dash/orders/{id}/invoice/download:
    get:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderDownloadInvoiceRequest
        required: true
        schema:
          $ref: '#/definitions/OrderDownloadInvoiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'content-type: application/pdf'
      summary: Download Order Invoice (Dashboard)
      tags:
      - Orders
  /dash/orders/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.OrderFetchRequest
        required: true
        schema:
          $ref: '#/definitions/OrderFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/OrderResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch Orders (Dashboard)
      tags:
      - Orders
  /dash/places:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.PlaceCreateRequest
        required: true
        schema:
          $ref: '#/definitions/PlaceCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      place:
                        $ref: '#/definitions/PlaceResponse'
                    type: object
              type: object
      summary: Create Place (Dashboard)
      tags:
      - Places
  /dash/places/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Soft Delete place by Id (dashboard)
      tags:
      - Places
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      place:
                        $ref: '#/definitions/PlaceResponse'
                    type: object
              type: object
      summary: Get place by Id (dashboard)
      tags:
      - Places
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.PlaceUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/PlaceUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      place:
                        $ref: '#/definitions/PlaceResponse'
                    type: object
              type: object
      summary: Update place by Id (dashboard)
      tags:
      - Places
  /dash/places/{id}/move:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.PlaceUpdateMoveRequest
        required: true
        schema:
          $ref: '#/definitions/PlaceUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      place:
                        $ref: '#/definitions/PlaceResponse'
                    type: object
              type: object
      summary: Update position of place by Id (dashboard)
      tags:
      - Places
  /dash/places/filter:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      places:
                        items:
                          $ref: '#/definitions/PlaceResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Place (Dashboard)
      tags:
      - Places
  /dash/roles:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RoleFetchRequest
        required: true
        schema:
          $ref: '#/definitions/RoleFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/RoleResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch Roles (Dashboard)
      tags:
      - Roles
  /dash/roles/options/user-form:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RoleOptionForUserFormRequest
        required: true
        schema:
          $ref: '#/definitions/RoleOptionForUserFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/RoleResponse'
                        type: array
                    type: object
              type: object
      summary: Option for User Form (Dashboard)
      tags:
      - Roles
  /dash/route-pricings:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RoutePricingCreateRequest
        required: true
        schema:
          $ref: '#/definitions/RoutePricingCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route_pricings:
                        items:
                          $ref: '#/definitions/RoutePricingResponse'
                        type: array
                    type: object
              type: object
      summary: Create Route Pricing (Dashboard)
      tags:
      - Route Pricings
  /dash/route-pricings/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Soft Delete Route Pricing by Id (dashboard)
      tags:
      - Route Pricings
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route_pricing:
                        $ref: '#/definitions/RoutePricingResponse'
                    type: object
              type: object
      summary: Get Route Pricing by Id (dashboard)
      tags:
      - Route Pricings
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.RoutePricingUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/RoutePricingUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route_pricing:
                        $ref: '#/definitions/RoutePricingResponse'
                    type: object
              type: object
      summary: Update Route Pricing by Id (dashboard)
      tags:
      - Route Pricings
  /dash/route-pricings/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RoutePricingFetchRequest
        required: true
        schema:
          $ref: '#/definitions/RoutePricingFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/RoutePricingResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Route Pricing (Dashboard)
      tags:
      - Route Pricings
  /dash/routes:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RouteCreateRequest
        required: true
        schema:
          $ref: '#/definitions/RouteCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route:
                        $ref: '#/definitions/RouteResponse'
                    type: object
              type: object
      summary: Create Route (Dashboard)
      tags:
      - Routes
  /dash/routes/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Soft Delete route by Id (dashboard)
      tags:
      - Routes
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route:
                        $ref: '#/definitions/RouteResponse'
                    type: object
              type: object
      summary: Get route by Id (dashboard)
      tags:
      - Routes
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Id
        in: body
        name: dto_request.RouteUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/RouteUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route:
                        $ref: '#/definitions/RouteResponse'
                    type: object
              type: object
      summary: Update route by Id (dashboard)
      tags:
      - Routes
  /dash/routes/batch:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RouteCreateBatchRequest
        required: true
        schema:
          $ref: '#/definitions/RouteCreateBatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route:
                        $ref: '#/definitions/RouteResponse'
                    type: object
              type: object
      summary: Create MultipleRoute (Dashboard)
      tags:
      - Routes
  /dash/routes/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RouteFetchRequest
        required: true
        schema:
          $ref: '#/definitions/RouteFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/RouteResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Routes (Dashboard)
      tags:
      - Routes
  /dash/routes/options/order-form:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RouteOptionForOrderFormRequest
        required: true
        schema:
          $ref: '#/definitions/RouteOptionForOrderFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/RouteResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Order Form (Dashboard)
      tags:
      - Routes
  /dash/routes/options/route-pricing-form:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RouteOptionForRoutePricingFormRequest
        required: true
        schema:
          $ref: '#/definitions/RouteOptionForRoutePricingFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/RouteResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Route Pricing Form (Dashboard)
      tags:
      - Routes
  /dash/uploads:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Body with file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      link:
                        type: string
                    type: object
              type: object
      summary: Upload file
      tags:
      - Uploads
  /dash/users:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.UserCreateRequest
        required: true
        schema:
          $ref: '#/definitions/UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      user:
                        $ref: '#/definitions/UserResponse'
                    type: object
              type: object
      summary: Create User (Dashboard)
      tags:
      - Users
  /dash/users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      user:
                        $ref: '#/definitions/UserResponse'
                    type: object
              type: object
      summary: Get User (Dashboard)
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.UserUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      user:
                        $ref: '#/definitions/UserResponse'
                    type: object
              type: object
      summary: Update User (Dashboard)
      tags:
      - Users
  /dash/users/{id}/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.UserUpdatePasswordRequest
        required: true
        schema:
          $ref: '#/definitions/UserUpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      user:
                        $ref: '#/definitions/UserResponse'
                    type: object
              type: object
      summary: Change User Password (Dashboard)
      tags:
      - Users
  /dash/users/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.UserFetchRequest
        required: true
        schema:
          $ref: '#/definitions/UserFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/UserResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch Users (Dashboard)
      tags:
      - Users
  /dash/users/me:
    get:
      consumes:
      - application/json
      description: To get current logged in user data, in dashboar
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      user:
                        $ref: '#/definitions/UserMeResponse'
                    type: object
              type: object
      summary: Get Me (Dashboard)
      tags:
      - Users
  /dash/vessels:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.VesselCreateRequest
        required: true
        schema:
          $ref: '#/definitions/VesselCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      vessel:
                        $ref: '#/definitions/VesselResponse'
                    type: object
              type: object
      summary: Create Vessel (Dashboard)
      tags:
      - Vessels
  /dash/vessels/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Delete (Dashboard)
      tags:
      - Vessels
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      vessel:
                        $ref: '#/definitions/VesselResponse'
                    type: object
              type: object
      summary: Get (Dashboard)
      tags:
      - Vessels
    put:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Bpdy Request
        in: body
        name: dto_request.VesselUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/VesselUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      vessel:
                        $ref: '#/definitions/VesselResponse'
                    type: object
              type: object
      summary: Update Vessel (Dashboard)
      tags:
      - Vessels
  /dash/vessels/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.VesselFetchRequest
        required: true
        schema:
          $ref: '#/definitions/VesselFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/VesselResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch (Dashboard)
      tags:
      - Vessels
  /dash/vessels/options/route-filter:
    post:
      consumes:
      - application/json
      description: Get list of vessels for route dropdown filter, this return all
        active on inactive route
      parameters:
      - description: Body Request
        in: body
        name: dto_request.VesselOptionForRouteFilterRequest
        required: true
        schema:
          $ref: '#/definitions/VesselOptionForRouteFilterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/VesselResponse'
                        type: array
                    type: object
              type: object
      summary: Option list for Route Filter (Dashboard)
      tags:
      - Vessels
  /dash/vessels/options/route-form:
    post:
      consumes:
      - application/json
      description: Get list of vessels for route form, this only return active route
      parameters:
      - description: Body Request
        in: body
        name: dto_request.VesselOptionForRouteFormRequest
        required: true
        schema:
          $ref: '#/definitions/VesselOptionForRouteFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/VesselResponse'
                        type: array
                    type: object
              type: object
      summary: Option list for Route Form (Dashboard)
      tags:
      - Vessels
  /dash/vessels/options/route-pricing-filter:
    post:
      consumes:
      - application/json
      description: Get list of vessels for route pricing dropdown filter, this return
        all active on inactive route
      parameters:
      - description: Body Request
        in: body
        name: dto_request.VesselOptionForRoutePricingFilterRequest
        required: true
        schema:
          $ref: '#/definitions/VesselOptionForRoutePricingFilterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/VesselResponse'
                        type: array
                    type: object
              type: object
      summary: Option list for Route Pricing Filter (Dashboard)
      tags:
      - Vessels
  /landing/auth/check-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.AuthLandingCheckEmailRequest
        required: true
        schema:
          $ref: '#/definitions/AuthLandingCheckEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      is_registered:
                        type: boolean
                    type: object
              type: object
      summary: Customer Check Email (Landing)
      tags:
      - Auth
  /landing/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.AuthLandingLoginEmailRequest
        required: true
        schema:
          $ref: '#/definitions/AuthLandingLoginEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/AuthTokenResponse'
              type: object
      summary: Customer Login Via Email (Landing)
      tags:
      - Auth
  /landing/auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SuccessResponse'
      summary: Customer Logout (Landing)
      tags:
      - Auth
  /landing/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.AuthLandingRegisterEmailRequest
        required: true
        schema:
          $ref: '#/definitions/AuthLandingRegisterEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Customer Registration Via Email (Landing)
      tags:
      - Auth
  /landing/auth/verification:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.AuthLandingEmailVerificationRequest
        required: true
        schema:
          $ref: '#/definitions/AuthLandingEmailVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/AuthTokenResponse'
              type: object
      summary: Customer Verification Via OTP Email (Landing)
      tags:
      - Auth
  /landing/companies/{slug}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      company:
                        $ref: '#/definitions/CompanyPublicResponse'
                    type: object
              type: object
      summary: Get company by slug (landing)
      tags:
      - Companies
  /landing/companies/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CompanyLandingFetchRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyLandingFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CompanyResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Companies (Landing Page)
      tags:
      - Companies
  /landing/companies/options/route-pricing-search:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.CompanyLandingOptionForRoutePricingSearchRequest
        required: true
        schema:
          $ref: '#/definitions/CompanyLandingOptionForRoutePricingSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/CompanyPublicPreviewResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Route Pricing Search (Landing)
      tags:
      - Companies
  /landing/customers/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      customer:
                        $ref: '#/definitions/CustomerResponse'
                    type: object
              type: object
      summary: Get Me Customer (Landing)
      tags:
      - Customers
  /landing/docks/options/route-pricing-search:
    post:
      consumes:
      - application/json
      description: Return list of docks for route pricing, this return all active
        route, only arrival_dock_id or departure_dock_id can be inserted in the filter
      parameters:
      - description: Body Request
        in: body
        name: dto_request.DockLandingOptionForRoutePricingSearchRequest
        required: true
        schema:
          $ref: '#/definitions/DockLandingOptionForRoutePricingSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/DockPublicResponse'
                        type: array
                    type: object
              type: object
      summary: Option for Route Pricing Search (Landing)
      tags:
      - Docks
  /landing/orders:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.OrderLandingCreateRequest
        required: true
        schema:
          $ref: '#/definitions/OrderLandingCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      order:
                        $ref: '#/definitions/OrderResponse'
                    type: object
              type: object
      summary: Create Orders (Landing Page)
      tags:
      - Orders
  /landing/orders/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order Id
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderLandingGetRequest
        required: true
        schema:
          $ref: '#/definitions/OrderLandingGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      order:
                        $ref: '#/definitions/OrderResponse'
                    type: object
              type: object
      summary: Get Order History of current logged in user (Landing Page)
      tags:
      - Orders
  /landing/orders/{id}/eticket/download:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order Id
        in: path
        name: id
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderLandingDownloadEticketByIdRequest
        required: true
        schema:
          $ref: '#/definitions/OrderLandingDownloadEticketByIdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'content-type: application/pdf'
      summary: Download Eticket of 'Paid' order, Required Login (Landing Page)
      tags:
      - Orders
  /landing/orders/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.OrderLandingFetchRequest
        required: true
        schema:
          $ref: '#/definitions/OrderLandingFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/OrderResponse'
                        type: array
                    type: object
              type: object
      summary: Fetch Order Histories of current logged in user (Landing Page)
      tags:
      - Orders
  /landing/orders/invoice-number/{invoice_number}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Invoice number
        in: path
        name: invoice_number
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderLandingGetByInvoiceNumberRequest
        required: true
        schema:
          $ref: '#/definitions/OrderLandingGetByInvoiceNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      order:
                        $ref: '#/definitions/OrderResponse'
                    type: object
              type: object
      summary: Get Order History by Invoice Number (Landing Page)
      tags:
      - Orders
  /landing/orders/invoice-number/{invoice_number}/eticket/download:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order Invoice Number
        in: path
        name: invoice_number
        required: true
        type: string
      - description: Body Request
        in: body
        name: dto_request.OrderLandingDownloadEticketByInvoiceNumberRequest
        required: true
        schema:
          $ref: '#/definitions/OrderLandingDownloadEticketByInvoiceNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'content-type: application/pdf'
      summary: Download Eticket of 'Paid' order by invoice number (Landing Page)
      tags:
      - Orders
  /landing/payments:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.PaymentLandingCreateOrderPaymentRequest
        required: true
        schema:
          $ref: '#/definitions/PaymentLandingCreateOrderPaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  $ref: '#/definitions/SuccessResponse'
              type: object
      summary: Create Payment Request (Dashboard)
      tags:
      - Payments
  /landing/places/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.PlaceLandingFetchRequest
        required: true
        schema:
          $ref: '#/definitions/PlaceLandingFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/PlaceResponse'
                        type: array
                    type: object
              type: object
      summary: Filter Place (Landing)
      tags:
      - Places
  /landing/route-pricings/best-for-you:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route_pricings:
                        items:
                          $ref: '#/definitions/LandingRoutePricingResponse'
                        type: array
                    type: object
              type: object
      summary: Best for you list (Landing)
      tags:
      - Route Pricings
  /landing/route-pricings/search:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.RoutePricingLandingSearchRequest
        required: true
        schema:
          $ref: '#/definitions/RoutePricingLandingSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      route_pricings:
                        items:
                          $ref: '#/definitions/RoutePricingResponse'
                        type: array
                    type: object
              type: object
      summary: Search Route Pricing (Landing)
      tags:
      - Route Pricings
  /landing/vessels/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      vessel:
                        $ref: '#/definitions/VesselPublicResponse'
                    type: object
              type: object
      summary: Get vessel by id (Landing Page)
      tags:
      - Vessels
  /landing/vessels/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body Request
        in: body
        name: dto_request.VesselLandingFetchRequest
        required: true
        schema:
          $ref: '#/definitions/VesselLandingFetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/PaginationResponse'
                  - properties:
                      nodes:
                        items:
                          $ref: '#/definitions/VesselPublicResponse'
                        type: array
                    type: object
              type: object
      summary: List Vessels (Landing Page)
      tags:
      - Vessels
  /landing/vessels/popular:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/DataResponse'
                  - properties:
                      vessels:
                        items:
                          $ref: '#/definitions/VesselPublicResponse'
                        type: array
                    type: object
              type: object
      summary: List Popular Vessels (Landing Page)
      tags:
      - Vessels
swagger: "2.0"
